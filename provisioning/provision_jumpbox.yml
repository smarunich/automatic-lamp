---
- hosts: all
  gather_facts: true
  become: true
  tasks:
  - apt_repository:
      repo: ppa:ansible/ansible
  - apt:
      name:
        - redis-server
        - python-psutil
        - python3-pip
        - python3-redis
        - python-netaddr
        - ansible
        - dnsmasq
        - nginx
        - jq
  - pip:
      name:
        - pip
        - boto3
        - ansible-runner
        - pyvmomi
        - apsw
        - kubernetes
        - openshift
      extra_args: --upgrade

  - shell: ansible-galaxy collection install community.kubernetes
    become_user: ubuntu

  - file:
      name: /usr/bin/python
      state: absent
    ignore_errors: yes
  - file:
      dest: /usr/bin/python
      src: /usr/bin/python3.6
      state: link
    ignore_errors: yes
  - file:
      path: /root/.ssh
      state: directory
      mode: '0600'
  - copy:
      src: ".{{ private_key_filename }}"
      dest: "/home/{{ item }}/.ssh/id_rsa"
      owner: "{{ item }}"
      group: "{{ item }}"
      mode: '0600'
    loop:
      - ubuntu
      - labadmin
  - copy:
      src: ".{{ private_key_filename }}"
      dest: /root/.ssh/id_rsa
      owner: root
      group: root
      mode: '0600'
  - lineinfile:
      dest: /etc/redis/redis.conf
      state: absent
      regexp: '^bind 127.0.0.1 ::1$'
  - replace:
      dest: /etc/redis/redis.conf
      regexp: '^(protected-mode) yes$'
      replace: '\1 no'
  - systemd:
      name: redis
      state: restarted
  - systemd:
      name: nginx
      state: restarted
  - copy:
      src: ../provisioning/01-central-server.conf
      dest: /etc/rsyslog.d/01-central-server.conf
  - systemd:
      state: restarted
      name: rsyslog
  - copy:
      src: ../provisioning/handle_register.py
      dest: /usr/local/bin/handle_register.py
  - copy:
      src: ../provisioning/handle_register.service
      dest: /etc/systemd/system/handle_register.service
  - systemd:
      state: restarted
      daemon_reload: yes
      name: handle_register
  - copy:
      src: ../provisioning/handle_bootstrap.py
      dest: /usr/local/bin/handle_bootstrap.py
      mode: 0755
  - copy:
      src: ../provisioning/handle_bootstrap.service
      dest: /etc/systemd/system/handle_bootstrap.service
  - systemd:
      state: restarted
      daemon_reload: yes
      name: handle_bootstrap
  - copy:
      src: ../provisioning/ansible_inventory.py
      dest: /etc/ansible/hosts
      mode: 0755
  - replace:
      path: /etc/ansible/ansible.cfg
      regexp: '^#(host_key_checking = False)$'
      replace: '\1'
  - file:
      path: /opt/bootstrap
      state: directory
      group: ubuntu
      mode: '0775'
  - copy:
      src: ../provisioning/bootstrap/
      dest: /opt/bootstrap/
      group: ubuntu
      mode: '0775'
  - replace:
      path: /etc/dnsmasq.conf
      regexp: "{{ item.regexp }}"
      replace: "{{ item.replace }}"
    loop:
      - { regexp: '^#(no-resolv)$', replace: '\1' }
      - { regexp: '^#(server)=/localnet/192.168.0.1$', replace: '\1 ={{ dns_server }}' }
      - { regexp: '^#(local)=/localnet/$', replace: '\1=/lab/' }
  - systemd:
      state: restarted
      name: dnsmasq
  - systemd:
      name: systemd-resolved
      state: stopped
      enabled: no
  - shell: cp /etc/resolv.conf ~/resolv.conf.original
  - file:
      path: /etc/resolv.conf
      state: absent
  - copy:
      src: ../provisioning/resolv.conf
      dest: /etc/resolv.conf
  - copy:
      src: ../provisioning/register.py
      dest: /usr/local/bin/register.py
      mode: 0755
  - copy:
      src: ../provisioning/register.py
      dest: /var/www/html/register.py
      mode: 0755

  - name: Generate a Self Signed OpenSSL certificate
    shell: openssl req -new -x509 -keyout /usr/local/bin/ipam.pem -out /usr/local/bin/ipam.pem -days 365 -nodes -subj '/CN=jumpbox.pod.lab/O=Labs/C=US'

  - copy:
      src: ../provisioning/ipam
      dest: /usr/lib/python3.6
  - copy:
      src: ../provisioning/ipam_server.py
      dest: /usr/local/bin/ipam_server.py
      mode: 0755
  - copy:
      src: ../provisioning/ipam_init.py
      dest: /usr/local/bin/ipam_init.py
      mode: 0755
  - copy:
      src: ../provisioning/handle_ipam.service
      dest: /etc/systemd/system/handle_ipam.service
  - systemd:
      state: restarted
      daemon_reload: yes
      name: handle_ipam
